# name: CICD Pipeline
# on:
#   push:
#     branches: [main]

# jobs:
#   build:
#     runs-on: [ubuntu-latest]
#     steps:
#       - name: Checkout source
#         uses: actions/checkout@v3
#       - name: Login to docker hub
#         run: docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }} 
#       - name: Build docker image
#         run: docker build -t lathiya50/simple-ec2-deploy .
#       - name: Publish image to docker hub
#         run: docker push lathiya50/simple-ec2-deploy:latest
  
#   deploy:
#     needs: build
#     runs-on: [aws-ec2]
#     steps:
#       - name: Install Docker
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common
#           curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
#           sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
#           sudo apt-get update
#           sudo apt-get install -y docker-ce docker-ce-cli containerd.io
#           sudo usermod -aG docker $USER
#           sudo systemctl start docker
#           sudo systemctl enable docker

#       - name: Pull image from docker hub
#         run: sudo docker pull lathiya50/simple-ec2-deploy:latest
      
#       - name: Delete old container
#         run: sudo docker rm -f nodejs-app-container || true
      
#       - name: Run docker container
#         run: sudo docker run -d -p 8800:8800 --name nodejs-app-container lathiya50/simple-ec2-deploy

name: Deploy Node.js App to EC2

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'

    - name: Install Dependencies
      run: npm install

    - name: Package Application
      run: zip -r app.zip .

    - name: Transfer Files to EC2
      uses: appleboy/scp-action@v0.1.0
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        source: "./app.zip"
        target: "~/node-app"

    - name: SSH and Deploy
      uses: appleboy/ssh-action@v0.1.0
      with:
        host: ${{ secrets.AWS_HOST }}
        username: ${{ secrets.AWS_USER }}
        key: ${{ secrets.AWS_KEY }}
        script: |
          cd ~/node-app
          unzip -o app.zip
          npm install
          pm2 stop all || true
          pm2 start index.js --name "node-app"
